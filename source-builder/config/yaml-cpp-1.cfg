#
# Yaml-CPP Version 1.
#
# This configuration file configure's, make's and install's Yaml-CPP
#

%if %{release} == %{nil}
%define release 1
%endif

Name:      yaml-cpp-%{yaml_cpp_version}-%{_host}-%{release}
Summary:   Yaml-CPP is a YAML parser and emitter in C++ matching the
           YAML 1.2 spec.
Version:   %{yaml_cpp_version}
Release:   %{release}
URL:       https://github.com/jbeder/yaml-cpp

#
# Source
#
%ifn %{defined yaml_cpp_url}
 %define yaml_cpp_url https://codeload.github.com/jbeder/yaml-cpp/tar.gz/%{yaml_cpp_version}
%endif
%source set yaml-cpp --rsb-file=yaml-cpp-%{yaml_cpp_version}.tar.gz %{yaml_cpp_url}

#
# Check for cmake
#
%define cmake %(command -v %{__cmake} || true)
%if %{cmake} == %{nil}
 %error no cmake found found; please install
%endif

#
# Prepare the source code.
#
%prep
  build_top=$(pwd)

  source_dir_yaml_cpp="yaml-cpp-%{yaml_cpp_version}"
  %source setup yaml-cpp -q -n yaml-cpp-%{yaml_cpp_version}
  %patch setup yaml-cpp -p1

  cd ${build_top}

%build
  build_top=$(pwd)

  %{build_directory}

  mkdir -p ${build_dir}
  cd ${build_dir}

  # yaml-cpp crosscompile for RTEMS using cmake
  %{__cmake} \
    -DYAML_BUILD_SHARED_LIBS=NO \
    -DYAML_ENABLE_PIC=NO \
    -DYAML_CPP_BUILD_TOOLS=NO \
    -DYAML_CPP_BUILD_TESTS=NO \
    -DCMAKE_SYSTEM_NAME="Generic" \
    -DCMAKE_CXX_COMPILER=%{rtems_bsp_cxx} \
    -DCMAKE_FIND_ROOT_PATH=%{with_tools} \
    -DCMAKE_CXX_FLAGS="-O2 -g %{rtems_bsp_ccflags}" \
    -DCMAKE_INSTALL_PREFIX=%{_exec_prefix} \
    ../yaml-cpp-%{yaml_cpp_version}

  %{__make} %{?_smp_mflags} VERBOSE=1

  cd ${build_top}

%install
  build_top=$(pwd)

  %{__rmdir} ${SB_BUILD_ROOT}

  cd ${build_dir}
  %{__make} DESTDIR=$SB_BUILD_ROOT install
  cd ${build_top}

  # RTEMS place everything under the 'arch/bsp/lib' directory as this is
  # what gcc does with a single system directory path
  %{__mv} \
    $SB_BUILD_ROOT/%{_exec_prefix}/include \
    $SB_BUILD_ROOT/%{_exec_prefix}/lib/
